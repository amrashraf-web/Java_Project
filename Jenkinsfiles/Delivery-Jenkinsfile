pipeline {
    agent any
    environment {
        sonar_url = 'http://amrashraf.com:9000/sonarqube'
        sonar_project_key = 'my-java-app'
        sonar_project_name = 'my-java-app'
        VERSION_PREFIX = '0.1.'
        MAX_BUILD_NUMBER = 9
    }
    stages {
        stage('Checkout') {
            steps {
                script {
                    def gitCredentialsId = 'github_key'
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: 'develop']],
                        userRemoteConfigs: [[
                            url: 'https://github.com/amrashraf-web/Java_Project.git',
                            credentialsId: gitCredentialsId
                        ]]
                    ])
                }
            }
        }
        stage('Reset Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Build and Test') {
            steps {
                def majorVersion = VERSION_PREFIX.tokenize('.')[0]
                def minorVersion = VERSION_PREFIX.tokenize('.')[1]

                // Calculate the beta version
                def betaVersion = "${majorVersion}.${minorVersion}.${BUILD_NUMBER % (MAX_BUILD_NUMBER + 1)}-beta"

                sh 'chmod +x automations/bin/*.sh && automations/bin/compile.sh \"maven_extra_arguments=-s .m2/settings.xml\" \"version=${betaVersion}\" \"sonar_url=$SONAR_URL\" \"sonar_project_key=$SONAR_PROJECT_KEY\" \"sonar_project_name=$SONAR_PROJECT_NAME\" && mkdir -p publish-artifacts && cp target/hello-world-web.war publish-artifacts/hello-world-web-${betaVersion}.war'
            }
        }
    }
    
    post {
        success {
            archiveArtifacts artifacts: "publish-artifacts/hello-world-web-${betaVersion}.war", onlyIfSuccessful: true
        }
    }



}
