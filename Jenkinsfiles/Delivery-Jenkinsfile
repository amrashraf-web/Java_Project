pipeline {
    agent any

    environment {
        sonar_url = 'http://amrashraf.com:9000/sonarqube'
        sonar_project_key = 'my-java-app'
        sonar_project_name = 'my-java-app'
        VERSION_PREFIX = '0.1.'
    }

    stages {
        stage('Reset Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Checkout') {
            steps {
                script {
                    def gitCredentialsId = 'github_key'
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: 'develop']],
                        userRemoteConfigs: [[
                            url: 'https://github.com/amrashraf-web/Java_Project.git',
                            credentialsId: gitCredentialsId
                        ]]
                    ])
                }
            }
        }
        stage('Build and Test') {
            steps {
                script {
                    def majorVersion = Integer.parseInt(VERSION_PREFIX.tokenize('.')[0])
                    def minorVersion = Integer.parseInt(VERSION_PREFIX.tokenize('.')[1])
                    def buildNumber = BUILD_NUMBER.toInteger()
                    def minorIncrement = (buildNumber / 10).toInteger()
                    minorVersion += minorIncrement
                    buildNumber %= 10
                    betaVersion = "${majorVersion}.${minorVersion}.${buildNumber}-beta"
                    env.VERSION_PREFIX = "${majorVersion}.${minorVersion}"
                    env.BUILD_NUMBER = "${buildNumber}"
        
                    sh """
                       echo \"${betaVersion}\"
                       echo \"VERSION_PREFIX=${VERSION_PREFIX}\" > ${WORKSPACE}/version.properties
                       echo \"BUILD_NUMBER=${BUILD_NUMBER}\" >> ${WORKSPACE}/version.properties
                       chmod +x \"${WORKSPACE}/automations/bin\"/*.sh &&
                       \"${WORKSPACE}/automations/bin/compile.sh\" "maven_extra_arguments=-s .m2/settings.xml" "version=${betaVersion}" "sonar_url=$SONAR_URL" "sonar_project_key=$SONAR_PROJECT_KEY" "sonar_project_name=$SONAR_PROJECT_NAME" &&
                       mkdir -p \"${WORKSPACE}/publish-artifacts\" &&
                       cp target/hello-world-web.war \"${WORKSPACE}/publish-artifacts/hello-world-web-${betaVersion}.war\"
                    """
                }
            }
        }
    }

    post {
        success {
            archiveArtifacts "publish-artifacts/hello-world-web-${betaVersion}.war"
        }
        always {
            echo "Cleaning up..."
        }
    }
}
