{
	applicationName: "my-java-app",

	buildConfigs: [{
		key: "my-java-app",
		name: "build and unit tests",
		agent: {
			dockerfile: {
 				filename: "maven-3.6.3-openjdk-11.Dockerfile"             
			}
		},
      	
        
		sonarEnabled: true,
		buildCommand: "chmod +x automations/bin/*.sh && automations/bin/compile.sh \"maven_extra_arguments=-s .m2/settings.xml\" \"version=$version\" \"sonar_url=$SONAR_URL\" \"sonar_project_key=$SONAR_PROJECT_KEY\" \"sonar_project_name=$SONAR_PROJECT_NAME\" && mkdir -p publish-artifacts && cp target/my-java-app-0.0.4-SNAPSHOT.jar publish-artifacts/my-java-app-$version.jar"
       	
   
	 } ,
		{
		  key: "my-java-app Image",
		  name: "Docker image build",
		  agent: {
			  dockerfile: {
				  filename: "maven-3.6.3-openjdk-11.Dockerfile"
			  }
		  },
		  sonarEnabled: true,   
		  buildCommand: "chmod +x automations/bin/*.sh && automations/bin/package.sh \"image_tag=stc/dms/microservices/my-java-app\"" 
		  }, { 
			  key: "package-helm",
			  name: "Helm packaging",
			  agent: {
				  dockerfile: {
					  filename: "alpine.Dockerfile"
			  }
		  },
		  sonarEnabled: true,
		  buildCommand: "chmod +x automations/bin/*.sh && automations/bin/package.sh \"helm_package_path=my-java-app-$version.tar.gz\""
	  
		}],
  
   publishConfigs: [
	{
		type: "docker-image",
		sourceImage: "stc/dms/microservices/my-java-app:latest",
		targetImage: "localhost/stc/dms/microservices/my-java-app:$version"
	},
	{ type: "maven-artifact",
		packages: [{
			file: "publish-artifacts/my-java-app-$version.jar",
			groupId: "sa.com.stc.dms.my-java-app",
			artifactId: "my-java-app",
            packaging: "jar"
		},
		{
		  file: "my-java-app-$version.tar.gz",
		  groupId: "sa.com.stc.dms.my-java-app",
		  artifactId: "my-java-app-helm"
	  }]}
    ]
}
